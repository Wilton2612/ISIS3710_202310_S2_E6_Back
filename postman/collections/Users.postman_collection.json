{
	"info": {
		"_postman_id": "01769c01-9896-47ed-a176-e4da4e28c21c",
		"name": "Users",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "20511316-01769c01-9896-47ed-a176-e4da4e28c21c"
	},
	"item": [
		{
			"name": "Obtener token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"token\", data.token);"
						],
						"type": "text/javascript",
						"id": "bc613546-a7b3-4e50-88c2-e56e10970b67"
					}
				}
			],
			"id": "19e8c33f-4a1b-4217-9bf5-4ea9e4f48aa5",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"username\": \"teacher\",\n   \"password\": \"admin\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/privacyusers/login",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"privacyusers",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"user_id\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript",
						"id": "77b93671-e75b-4705-a709-7b387c2a391c"
					}
				}
			],
			"id": "feead0fb-85d9-4224-9c51-8be777b1fab2",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Juan Perez\",\n    \"email\": \"j.perez@uniandes.edu.co\",\n    \"password\": \"contrasenaSegura\",\n    \"image\": \"imagen.url.com\",\n    \"user\": \"j.perez\",\n    \"userType\": \"student\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/users",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": [
				{
					"id": "7af10fe1-0391-439b-b5ca-6f94aad0da1e",
					"name": "Add User",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 1,\n    \"name\": \"Juan Perez\",\n    \"mail\": \"j.perez@uniandes.edu.co\",\n    \"password\": \"contrasenaSegura\",\n    \"image\": \"imagen.url.com\",\n    \"login\": \"j.perez\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "Text",
					"_postman_previewtype": "html",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Get all Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of users > ' + 0, function () {",
							"   var data = pm.response.json()",
							"   pm.expect(data.length).to.greaterThan(0)",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"id": "c6424078-0cb5-4fb0-8e60-e66745829bc5"
					}
				}
			],
			"id": "560b09ab-fd10-492d-8b0d-7a6438d51acd",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": [
				{
					"id": "887bbb81-631c-4123-889b-8fc02d853abc",
					"name": "Get all Users",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/users",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "Text",
					"_postman_previewtype": "html",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Get one User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"id": "8458e70a-5459-4557-8c9d-32f68644a146"
					}
				}
			],
			"id": "77ebdc7a-dad0-42d0-a721-c52921b3d698",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users/{{user_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": [
				{
					"id": "06b65438-824a-4fbe-82ff-684d3ee8ed14",
					"name": "Get one User",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/users{{userID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users{{userID}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "Text",
					"_postman_previewtype": "html",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Get an invalid User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"The user with the given id was not found\");",
							"});"
						],
						"type": "text/javascript",
						"id": "126c5a58-29fc-4c66-abc5-414f0a0c7a38"
					}
				}
			],
			"id": "a37e7c30-85d3-430c-a953-be6f6aa72ed0",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/users/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"id": "eba1b4a6-5ce8-4ff6-a5de-316c90e005fe",
					"name": "Get an invalid User",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/users/000-000-000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"000-000-000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "Text",
					"_postman_previewtype": "html",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Update User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"id": "90c3ffb5-95b5-41d0-a12c-b829228e6fef"
					}
				}
			],
			"id": "038848c5-0648-4d39-8796-5969ed324e3e",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Juan Perez\",\n    \"email\": \"j.perez@uniandes.edu.co\",\n    \"password\": \"contrasenaSegura3000\",\n    \"image\": \"imagen.url.com\",\n    \"user\": \"j.perez\",\n    \"userType\": \"student\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/users/{{user_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": [
				{
					"id": "7222a181-0d7d-4a52-9de9-5b5f7e47a502",
					"name": "Update User",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 1,\n    \"name\": \"Juan Perez\",\n    \"mail\": \"j.perez@uniandes.edu.co\",\n    \"password\": \"contrasenaSegura2\",\n    \"image\": \"imagen.url.com\",\n    \"login\": \"j.perez\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/{{userID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"{{userID}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "Text",
					"_postman_previewtype": "html",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Update an invalid User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"The user with the given id was not found\");",
							"});"
						],
						"type": "text/javascript",
						"id": "8cebd216-6a80-4732-800d-89d72f778b0f"
					}
				}
			],
			"id": "57529e42-0800-4ae8-83ba-cc6fefff3854",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Juan Perez\",\n    \"email\": \"j.perez@uniandes.edu.co\",\n    \"password\": \"contrasenaSegura3000\",\n    \"image\": \"imagen.url.com\",\n    \"user\": \"j.perez\",\n    \"userType\": \"student\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/users/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"id": "7b11a862-d7e9-45bf-811a-2ac9fd55b275",
					"name": "Update an invalid User",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"statusCode\": 404,\n   \"message\": \"The user with the given id was not found\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/user/0000-00000-0000-000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"0000-00000-0000-000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "Text",
					"_postman_previewtype": "html",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Delete an User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"   pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript",
						"id": "5539c9f9-ed0e-4da2-bdff-e9bcfe4120cc"
					}
				}
			],
			"id": "3dc440b4-c8da-41b2-9ff8-c93223987eca",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users/{{user_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": [
				{
					"id": "1fcb5534-cc98-4b58-b6fc-88889eac176d",
					"name": "Delete an User",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}/users/{{userID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"{{userID}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "Text",
					"_postman_previewtype": "html",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Delete an invalid User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"The user with the given id was not found\");",
							"});"
						],
						"type": "text/javascript",
						"id": "eb7b4122-d41d-4554-bb7e-372357e4d7ff"
					}
				}
			],
			"id": "61dfc4c6-c385-49dd-81ca-9f1eca9936f3",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"id": "a3ae5f26-f83c-40df-af75-b09305ccb5d3",
					"name": "Delete an invalid User",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/users/0000-0000-000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"0000-0000-000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "Text",
					"_postman_previewtype": "html",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				],
				"id": "232411b5-3f21-4328-b263-e6e2bf86a8f3"
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				],
				"id": "779df22b-5085-4b7f-900d-1c4fb0d998e9"
			}
		}
	],
	"variable": [
		{
			"id": "04dab825-dcaf-45bd-855b-3b65a24a780e",
			"key": "baseURL",
			"value": " http://localhost:3000/api/v1",
			"type": "string"
		}
	]
}